name: Changed adapters have the latest EA framework version

on:
  pull_request:
    branches:
      - main

jobs:
  ea-framework-outdated-version:
    name: Changed adapters have the latest EA framework version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check if changed v3 adapters have the latest EA framework version
        id: adapter_change_has_latest_ea_framework_version
        uses: jitterbit/get-changed-files@v1
      - run: |
          # Check for outdated ea-framework dependencies
          dependency="@chainlink/external-adapter-framework"
          v3_packages=()
          outdated_packages=()
          packages=$(find packages -name 'package.json')
          latest_version="0.28.4"
          changes=${{ steps.adapter_change_has_latest_ea_framework_version.outputs.all }}

           # get the list of v3 EAs
           for file in $(echo $packages); do
              if jq -e ".dependencies[\"$dependency\"]" "$file" >/dev/null; then
                v3_packages+=("$(dirname $file)")
              fi
           done
          
          echo $v3_packages
          
           # check if changed code is part of any v3 EA
            for changedFile in "${changes[@]}"; do
             for package in "${v3_packages[@]}"; do
                if [[ "$changedFile" == "$package"* ]]; then
                  # found change in v3 adapter, comparing versions
                  local_version=$(jq -r ".dependencies[\"$dependency\"]" "$package/package.json")
                  if [ "$local_version" != $(echo $latest_version) ]; then
                    outdated_packages+=("$package")
                  fi
                fi
             done
            done
          
            if [ ${#outdated_packages[@]} -gt 0 ]; then
              echo "The following packages have an outdated \"$dependency\" dependency:"
              for file in "${outdated_packages[@]}"; do
                echo "- $file"
              done
            exit 1
            fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
