# This is the entry point for CI. It will setup the application, then run lint, test, and eventually publish if not the main branch
name: 'Main'
on:
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: yarn
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          gh auth status
          outdated_packages=()
          dependency="@chainlink/external-adapter-framework"
          latest_version=$(gh api repos/smartcontractkit/ea-framework-js/contents/package.json | jq -r '.content' | base64 -d | jq -r '.version')
          echo $latest_version
          
           for file in $(echo $(find packages -name 'package.json')); do
            if jq -e ".dependencies[\"$dependency\"]" "$file" >/dev/null; then
              version=$(jq -r ".dependencies[\"$dependency\"]" "$file")
              if [ "$version" != $(echo $latest_version) ]; then
                outdated_packages+=("$file")
              fi
             fi
            done
            if [ ${#outdated_packages[@]} -gt 0 ]; then
              echo "The following packages have an outdated \"$dependency\" dependency:"
              for file in "${outdated_packages[@]}"; do
                echo "- $file"
              done
            exit 1
            fi
